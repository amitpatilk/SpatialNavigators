{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/spatial-navigators/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport Select from 'react-select';\nimport Creatable from 'react-select/creatable';\nimport './App.css';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCenter = [39.8283, -98.5795];\nconst defaultZoom = 4;\nconst usStates = [{\n  value: 'AL',\n  label: 'Alabama'\n}, {\n  value: 'AK',\n  label: 'Alaska'\n}, {\n  value: 'AZ',\n  label: 'Arizona'\n}, {\n  value: 'AR',\n  label: 'Arkansas'\n}, {\n  value: 'CA',\n  label: 'California'\n}, {\n  value: 'CO',\n  label: 'Colorado'\n}, {\n  value: 'CT',\n  label: 'Connecticut'\n}, {\n  value: 'DE',\n  label: 'Delaware'\n}, {\n  value: 'FL',\n  label: 'Florida'\n}, {\n  value: 'GA',\n  label: 'Georgia'\n}, {\n  value: 'HI',\n  label: 'Hawaii'\n}, {\n  value: 'ID',\n  label: 'Idaho'\n}, {\n  value: 'IL',\n  label: 'Illinois'\n}, {\n  value: 'IN',\n  label: 'Indiana'\n}, {\n  value: 'IA',\n  label: 'Iowa'\n}, {\n  value: 'KS',\n  label: 'Kansas'\n}, {\n  value: 'KY',\n  label: 'Kentucky'\n}, {\n  value: 'LA',\n  label: 'Louisiana'\n}, {\n  value: 'ME',\n  label: 'Maine'\n}, {\n  value: 'MD',\n  label: 'Maryland'\n}, {\n  value: 'MA',\n  label: 'Massachusetts'\n}, {\n  value: 'MI',\n  label: 'Michigan'\n}, {\n  value: 'MN',\n  label: 'Minnesota'\n}, {\n  value: 'MS',\n  label: 'Mississippi'\n}, {\n  value: 'MO',\n  label: 'Missouri'\n}, {\n  value: 'MT',\n  label: 'Montana'\n}, {\n  value: 'NE',\n  label: 'Nebraska'\n}, {\n  value: 'NV',\n  label: 'Nevada'\n}, {\n  value: 'NH',\n  label: 'New Hampshire'\n}, {\n  value: 'NJ',\n  label: 'New Jersey'\n}, {\n  value: 'NM',\n  label: 'New Mexico'\n}, {\n  value: 'NY',\n  label: 'New York'\n}, {\n  value: 'NC',\n  label: 'North Carolina'\n}, {\n  value: 'ND',\n  label: 'North Dakota'\n}, {\n  value: 'OH',\n  label: 'Ohio'\n}, {\n  value: 'OK',\n  label: 'Oklahoma'\n}, {\n  value: 'OR',\n  label: 'Oregon'\n}, {\n  value: 'PA',\n  label: 'Pennsylvania'\n}, {\n  value: 'RI',\n  label: 'Rhode Island'\n}, {\n  value: 'SC',\n  label: 'South Carolina'\n}, {\n  value: 'SD',\n  label: 'South Dakota'\n}, {\n  value: 'TN',\n  label: 'Tennessee'\n}, {\n  value: 'TX',\n  label: 'Texas'\n}, {\n  value: 'UT',\n  label: 'Utah'\n}, {\n  value: 'VT',\n  label: 'Vermont'\n}, {\n  value: 'VA',\n  label: 'Virginia'\n}, {\n  value: 'WA',\n  label: 'Washington'\n}, {\n  value: 'WV',\n  label: 'West Virginia'\n}, {\n  value: 'WI',\n  label: 'Wisconsin'\n}, {\n  value: 'WY',\n  label: 'Wyoming'\n}];\nfunction App() {\n  _s();\n  const mapRef = useRef();\n  const [selectedStates, setSelectedStates] = useState([]);\n  const [selectedCities, setSelectedCities] = useState([]);\n  const [selectedCounties, setSelectedCounties] = useState([]);\n  const [displayFoliumMap, setDisplayFoliumMap] = useState(false);\n  // const [selectedState, setSelectedState] = useState(null);\n  // const [dateRange] = useState({ startDate: '', endDate: '' });\n  const [showTraffic] = useState(true);\n  const [showConstruction] = useState(true);\n  const [realTimeData] = useState(false);\n  const [accidentType, setAccidentType] = useState('');\n  const [constructionType, setConstructionType] = useState('');\n  const [geographicArea, setGeographicArea] = useState('');\n  const [timeOfDay, setTimeOfDay] = useState('');\n  const imageUrls = ['Images/download.jpeg', 'Images/641968.jpg', 'Images/641968.jpg', 'Images/641968.jpg'];\n  const [toggleState, setToggleState] = useState('option1');\n  const handleToggleChange = event => {\n    setToggleState(event.target.value);\n  };\n  const handleStateChange = selectedOption => {\n    setSelectedStates(selectedOption);\n  };\n  const handleCityChange = selectedOptions => {\n    setSelectedCities(selectedOptions);\n    console.log(selectedCities);\n  };\n  const handleCountyChange = selectedOptions => {\n    setSelectedCounties(selectedOptions);\n  };\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  // Event handlers for date changes\n  const handleStartDateChange = event => {\n    setStartDate(event.target.value);\n  };\n  const handleEndDateChange = event => {\n    setEndDate(event.target.value);\n  };\n  const [showAnalysis, setShowAnalysis] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const handleGenerateReport = () => {\n    setLoading(true); // Start loading\n\n    // Simulate a delay for fetching data from the backend\n    setTimeout(async () => {\n      try {\n        await handleSubmit();\n        setDisplayFoliumMap(true);\n        setShowAnalysis(true);\n      } catch (error) {\n        console.error('Error during data submission:', error);\n        // Optionally set an error state here to notify the user\n      } finally {\n        setLoading(false); // End loading, regardless of success or failure\n      }\n    }, 2000); // This timeout represents the time taken to get the data from the backend\n  };\n  const handleSubmit = async () => {\n    const payload = {\n      selectedStates: selectedStates.map(state => state.value),\n      selectedCities: selectedCities.map(city => city.value),\n      selectedCounties: selectedCounties.map(county => county.value),\n      startDate: startDate,\n      endDate: endDate,\n      toggleState: toggleState\n    };\n    console.log('Payload:', payload);\n    return payload;\n\n    // Send payload to the backend\n    // const response = await fetch('YOUR_BACKEND_ENDPOINT', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   },\n    //   body: JSON.stringify(payload)\n    // });\n\n    // if (!response.ok) {\n    //   throw new Error(`HTTP error! status: ${response.status}`);\n    // }\n\n    // return response.json();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [!displayFoliumMap ? /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: defaultCenter,\n        zoom: defaultZoom,\n        className: \"map\",\n        children: /*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: `${process.env.PUBLIC_URL}/map.html`,\n        title: \"Folium Map\",\n        className: \"map\"\n        //style={{ width: '100%', height: '500px' }}\n        ,\n        frameBorder: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Filter Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Choose Dataset :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"three-way-toggle\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"toggleOption1\",\n              name: \"toggle\",\n              value: \"option1\",\n              checked: toggleState === 'option1',\n              onChange: handleToggleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"toggleOption1\",\n              children: \"Constructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"toggleOption2\",\n              name: \"toggle\",\n              value: \"option2\",\n              checked: toggleState === 'option2',\n              onChange: handleToggleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"toggleOption2\",\n              children: \"Accidents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"toggleOption3\",\n              name: \"toggle\",\n              value: \"option3\",\n              checked: toggleState === 'option3',\n              onChange: handleToggleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"toggleOption3\",\n              children: \"Co-relation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"state-select\",\n            children: \"Select State:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"state-select\",\n            value: selectedStates,\n            onChange: handleStateChange,\n            options: usStates,\n            isMulti: true,\n            isClearable: true,\n            isSearchable: true,\n            closeMenuOnSelect: false,\n            classNamePrefix: \"select\",\n            placeholder: \"Search and select states...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"city-select\",\n            children: \"Enter City(s):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Creatable, {\n            id: \"city-select\",\n            value: selectedCities,\n            onChange: handleCityChange,\n            isMulti: true,\n            isClearable: true,\n            placeholder: \"Type and press enter...\",\n            classNamePrefix: \"select\"\n            // menuIsOpen={false}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"county-select\",\n            children: \"Enter County(s):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Creatable, {\n            id: \"county-select\",\n            value: selectedCounties,\n            onChange: handleCountyChange,\n            isMulti: true,\n            isClearable: true,\n            placeholder: \"Type and press enter...\",\n            classNamePrefix: \"select\"\n            // menuIsOpen={false}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-picker\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"startDate\",\n            children: \"Start Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"startDate\",\n            name: \"startDate\",\n            value: startDate,\n            onChange: handleStartDateChange // Update state when date is picked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-picker\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"endDate\",\n            children: \"End Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"endDate\",\n            name: \"endDate\",\n            value: endDate,\n            onChange: handleEndDateChange,\n            min: startDate,\n            disabled: !startDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"generate-report-btn\",\n          onClick: handleGenerateReport,\n          children: [loading ? \"Loading...\" : \"Generate Report\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        borderTop: '2px solid #0e0f0e',\n        margin: '20px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), showAnalysis && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 7\n      }, this), imageUrls.map((url, index) =>\n      // Only create a new row for even indices\n      index % 2 === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.PUBLIC_URL + '/' + imageUrls[index],\n          alt: `Analysis ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), imageUrls[index + 1] ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.PUBLIC_URL + '/' + imageUrls[index + 1],\n          alt: `Analysis ${index + 2}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 15\n        }, this) : null]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this) : null)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"miCHaasN0yfdNjmbhYoINx75Nxo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","MapContainer","TileLayer","Select","Creatable","jsxDEV","_jsxDEV","defaultCenter","defaultZoom","usStates","value","label","App","_s","mapRef","selectedStates","setSelectedStates","selectedCities","setSelectedCities","selectedCounties","setSelectedCounties","displayFoliumMap","setDisplayFoliumMap","showTraffic","showConstruction","realTimeData","accidentType","setAccidentType","constructionType","setConstructionType","geographicArea","setGeographicArea","timeOfDay","setTimeOfDay","imageUrls","toggleState","setToggleState","handleToggleChange","event","target","handleStateChange","selectedOption","handleCityChange","selectedOptions","console","log","handleCountyChange","startDate","setStartDate","endDate","setEndDate","handleStartDateChange","handleEndDateChange","showAnalysis","setShowAnalysis","loading","setLoading","handleGenerateReport","setTimeout","handleSubmit","error","payload","map","state","city","county","className","children","center","zoom","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","src","process","env","PUBLIC_URL","title","frameBorder","type","id","name","checked","onChange","htmlFor","options","isMulti","isClearable","isSearchable","closeMenuOnSelect","classNamePrefix","placeholder","min","disabled","onClick","style","borderTop","margin","index","alt","_c","$RefreshReg$"],"sources":["/Users/amit/Desktop/spatial-navigators/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport Select from 'react-select';\nimport Creatable from 'react-select/creatable';\nimport './App.css';\nimport 'leaflet/dist/leaflet.css';\n\nconst defaultCenter = [39.8283, -98.5795];\nconst defaultZoom = 4;\n\nconst usStates = [\n  { value: 'AL', label: 'Alabama' },\n  { value: 'AK', label: 'Alaska' },\n  { value: 'AZ', label: 'Arizona' },\n  { value: 'AR', label: 'Arkansas' },\n  { value: 'CA', label: 'California' },\n  { value: 'CO', label: 'Colorado' },\n  { value: 'CT', label: 'Connecticut' },\n  { value: 'DE', label: 'Delaware' },\n  { value: 'FL', label: 'Florida' },\n  { value: 'GA', label: 'Georgia' },\n  { value: 'HI', label: 'Hawaii' },\n  { value: 'ID', label: 'Idaho' },\n  { value: 'IL', label: 'Illinois' },\n  { value: 'IN', label: 'Indiana' },\n  { value: 'IA', label: 'Iowa' },\n  { value: 'KS', label: 'Kansas' },\n  { value: 'KY', label: 'Kentucky' },\n  { value: 'LA', label: 'Louisiana' },\n  { value: 'ME', label: 'Maine' },\n  { value: 'MD', label: 'Maryland' },\n  { value: 'MA', label: 'Massachusetts' },\n  { value: 'MI', label: 'Michigan' },\n  { value: 'MN', label: 'Minnesota' },\n  { value: 'MS', label: 'Mississippi' },\n  { value: 'MO', label: 'Missouri' },\n  { value: 'MT', label: 'Montana' },\n  { value: 'NE', label: 'Nebraska' },\n  { value: 'NV', label: 'Nevada' },\n  { value: 'NH', label: 'New Hampshire' },\n  { value: 'NJ', label: 'New Jersey' },\n  { value: 'NM', label: 'New Mexico' },\n  { value: 'NY', label: 'New York' },\n  { value: 'NC', label: 'North Carolina' },\n  { value: 'ND', label: 'North Dakota' },\n  { value: 'OH', label: 'Ohio' },\n  { value: 'OK', label: 'Oklahoma' },\n  { value: 'OR', label: 'Oregon' },\n  { value: 'PA', label: 'Pennsylvania' },\n  { value: 'RI', label: 'Rhode Island' },\n  { value: 'SC', label: 'South Carolina' },\n  { value: 'SD', label: 'South Dakota' },\n  { value: 'TN', label: 'Tennessee' },\n  { value: 'TX', label: 'Texas' },\n  { value: 'UT', label: 'Utah' },\n  { value: 'VT', label: 'Vermont' },\n  { value: 'VA', label: 'Virginia' },\n  { value: 'WA', label: 'Washington' },\n  { value: 'WV', label: 'West Virginia' },\n  { value: 'WI', label: 'Wisconsin' },\n  { value: 'WY', label: 'Wyoming' }\n];\n\n\nfunction App() {\n  const mapRef = useRef();\n  const [selectedStates, setSelectedStates] = useState([]);\n  const [selectedCities, setSelectedCities] = useState([]);\n  const [selectedCounties, setSelectedCounties] = useState([]);\n  const [displayFoliumMap, setDisplayFoliumMap] = useState(false);\n  // const [selectedState, setSelectedState] = useState(null);\n  // const [dateRange] = useState({ startDate: '', endDate: '' });\n  const [showTraffic] = useState(true);\n  const [showConstruction] = useState(true);\n  const [realTimeData] = useState(false);\n  const [accidentType, setAccidentType] = useState('');\n  const [constructionType, setConstructionType] = useState('');\n  const [geographicArea, setGeographicArea] = useState('');\n  const [timeOfDay, setTimeOfDay] = useState('');\n  const imageUrls = [\n    'Images/download.jpeg',\n    'Images/641968.jpg',\n    'Images/641968.jpg',\n    'Images/641968.jpg'\n\n  ];\n  const [toggleState, setToggleState] = useState('option1'); \n  const handleToggleChange = (event) => {\n    setToggleState(event.target.value);\n  };\n  \n  const handleStateChange = selectedOption => {\n      setSelectedStates(selectedOption);\n  };\n\n  const handleCityChange = selectedOptions => {\n    setSelectedCities(selectedOptions);\n    console.log(selectedCities);\n  };\n\n  const handleCountyChange = selectedOptions => {\n    setSelectedCounties(selectedOptions);\n  };\n\n  \n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n \n\n  // Event handlers for date changes\n  const handleStartDateChange = (event) => {\n    setStartDate(event.target.value);\n  };\n\n  const handleEndDateChange = (event) => {\n    setEndDate(event.target.value);\n  };\n\n  const [showAnalysis, setShowAnalysis] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const handleGenerateReport = () => {\n    setLoading(true); // Start loading\n  \n    // Simulate a delay for fetching data from the backend\n    setTimeout(async () => {\n      try {\n        \n        await handleSubmit();\n        \n        setDisplayFoliumMap(true);\n\n        setShowAnalysis(true);\n      } catch (error) {\n        console.error('Error during data submission:', error);\n        // Optionally set an error state here to notify the user\n      } finally {\n        setLoading(false); // End loading, regardless of success or failure\n      }\n    }, 2000); // This timeout represents the time taken to get the data from the backend\n  };\n  \n\n  const handleSubmit = async () => {\n    const payload = {\n      selectedStates: selectedStates.map(state => state.value),\n      selectedCities: selectedCities.map(city => city.value),\n      selectedCounties: selectedCounties.map(county => county.value),\n      startDate: startDate,\n      endDate: endDate,\n      toggleState: toggleState\n    };\n\n    console.log('Payload:', payload);\n    return payload;\n  \n    // Send payload to the backend\n    // const response = await fetch('YOUR_BACKEND_ENDPOINT', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   },\n    //   body: JSON.stringify(payload)\n    // });\n  \n    // if (!response.ok) {\n    //   throw new Error(`HTTP error! status: ${response.status}`);\n    // }\n  \n    // return response.json();\n  };\n  \n  \n  return (\n    <div className=\"App\">\n      {/* <Map ref={mapRef} center={defaultCenter} zoom={defaultZoom} className=\"map\">\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; OpenStreetMap contributors\"\n        />\n      </Map> */}\n      <div className = \"content\">\n        {/* Map Section - Leaflet Map or Folium Map */}\n      {!displayFoliumMap ? (\n        <MapContainer center={defaultCenter} zoom={defaultZoom} className=\"map\">\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution=\"&copy; OpenStreetMap contributors\"\n          />\n        </MapContainer>\n      ) : (\n        <iframe \n          src={`${process.env.PUBLIC_URL}/map.html`} \n          title=\"Folium Map\"\n          className=\"map\"\n          //style={{ width: '100%', height: '500px' }}\n          frameBorder=\"0\"\n        ></iframe>\n      )}\n\n      <div className=\"sidebar\">\n        <h2>Filter Panel</h2>\n        {/* Existing filters... */}\n        {/* New filters added below */}\n        <div className=\"filter-option\">\n  <label>Choose Dataset :</label>\n  <div className=\"three-way-toggle\">\n    <input\n      type=\"radio\"\n      id=\"toggleOption1\"\n      name=\"toggle\"\n      value=\"option1\"\n      checked={toggleState === 'option1'}\n      onChange={handleToggleChange}\n    />\n    <label htmlFor=\"toggleOption1\">Constructions</label>\n\n    <input\n      type=\"radio\"\n      id=\"toggleOption2\"\n      name=\"toggle\"\n      value=\"option2\"\n      checked={toggleState === 'option2'}\n      onChange={handleToggleChange}\n    />\n    <label htmlFor=\"toggleOption2\">Accidents</label>\n\n    <input\n      type=\"radio\"\n      id=\"toggleOption3\"\n      name=\"toggle\"\n      value=\"option3\"\n      checked={toggleState === 'option3'}\n      onChange={handleToggleChange}\n    />\n    <label htmlFor=\"toggleOption3\">Co-relation</label>\n  </div>\n</div>\n\n        \n        <div className=\"filter-option\">\n          <label htmlFor=\"state-select\">Select State:</label>\n          <Select\n            id=\"state-select\"\n            value={selectedStates}\n            onChange={handleStateChange}\n            options={usStates}\n            isMulti={true}\n            isClearable={true}\n            isSearchable={true}\n            closeMenuOnSelect={false}\n            classNamePrefix=\"select\"\n            placeholder=\"Search and select states...\"\n          />\n        </div>\n\n        <div className=\"filter-option\">\n          <label htmlFor=\"city-select\">Enter City(s):</label>\n          <Creatable\n            id=\"city-select\"\n            value={selectedCities}\n            onChange={handleCityChange}\n            isMulti = {true}\n            isClearable={true}\n            placeholder=\"Type and press enter...\"\n            classNamePrefix=\"select\"\n            // menuIsOpen={false}\n          />\n        </div>\n\n        <div className=\"filter-option\">\n          <label htmlFor=\"county-select\">Enter County(s):</label>\n          <Creatable\n            id=\"county-select\"\n            value={selectedCounties}\n            onChange={handleCountyChange}\n            isMulti = {true}\n            isClearable={true}\n            placeholder=\"Type and press enter...\"\n            classNamePrefix=\"select\"\n            // menuIsOpen={false}\n          />\n        </div>\n\n\n        <div className=\"date-picker\">\n          <label htmlFor=\"startDate\">Start Date:</label>\n          <input\n            type=\"date\"\n            id=\"startDate\"\n            name=\"startDate\"\n            value={startDate}\n            onChange={handleStartDateChange} // Update state when date is picked\n          />\n        </div>\n        <div className=\"date-picker\">\n          <label htmlFor=\"endDate\">End Date:</label>\n          <input\n            type=\"date\"\n            id=\"endDate\"\n            name=\"endDate\"\n            value={endDate}\n            onChange={handleEndDateChange}\n            min = {startDate}\n            disabled = {!startDate}\n          />\n        </div>\n       \n        {/* <div className=\"date-picker\">\n          <label htmlFor=\"constructionType\">Date Range Selection</label>\n          <label htmlFor=\"constructionType\"> </label>\n          <label htmlFor=\"startDate\"> Start Date:</label>\n          <input\n            type=\"date\"\n            id=\"startDate\"\n            name=\"startDate\"\n            value={dateRange.startDate}\n          />\n        </div>\n        <div className=\"date-picker\">\n          <label htmlFor=\"endDate\">End Date:</label>\n          <input\n            type=\"date\"\n            id=\"endDate\"\n            name=\"endDate\"\n            value={dateRange.endDate}\n          />\n        </div> */}\n        \n        {/* <button className=\"generate-report-btn\">Generate Report</button> */}\n        {/* <button className=\"generate-report-btn\" onClick={handleGenerateReport}>\n        {loading ? <div className=\"loading-spinner\"></div> : \"Generate Report\"}\n      </button> */}\n\n<button className=\"generate-report-btn\" onClick={handleGenerateReport}>\n          {loading ? \"Loading...\" : \"Generate Report\"} {/* Loading indicator */}\n        </button>\n      </div>\n      </div>\n      <div style={{ borderTop: '2px solid #0e0f0e', margin: '20px 0' }}></div>\n\n\n      {\n  showAnalysis && (\n    <div className=\"analysis-section\">\n      <h1>Analysis</h1>\n      {/* Wrapping each pair of images in a .image-row div */}\n      {imageUrls.map((url, index) => (\n        // Only create a new row for even indices\n        index % 2 === 0 ? (\n          <div className=\"image-row\" key={index}>\n            {/* First image of the pair */}\n            <img src={process.env.PUBLIC_URL + '/' + imageUrls[index]} alt={`Analysis ${index + 1}`} />\n            {/* Second image of the pair, if it exists */}\n            {imageUrls[index + 1] ? (\n              <img src={process.env.PUBLIC_URL + '/' + imageUrls[index + 1]} alt={`Analysis ${index + 2}`} />\n            ) : null}\n          </div>\n        ) : null\n      ))}\n    </div>\n  )\n}\n\n\n      \n    </div>\n\n\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}