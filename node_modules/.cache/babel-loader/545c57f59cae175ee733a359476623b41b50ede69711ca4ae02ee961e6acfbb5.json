{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Documents/GitHub/SpatialNavigators/src/App.js\",\n  _s2 = $RefreshSig$();\n// import React, { useState, useRef } from 'react';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport Select from 'react-select';\nimport Creatable from 'react-select/creatable';\nimport './App.css';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCenter = [39.8283, -98.5795];\nconst defaultZoom = 15;\nconst usStates = [{\n  value: 'AL',\n  label: 'Alabama'\n}, {\n  value: 'AK',\n  label: 'Alaska'\n}, {\n  value: 'AZ',\n  label: 'Arizona'\n}, {\n  value: 'AR',\n  label: 'Arkansas'\n}, {\n  value: 'CA',\n  label: 'California'\n}, {\n  value: 'CO',\n  label: 'Colorado'\n}, {\n  value: 'CT',\n  label: 'Connecticut'\n}, {\n  value: 'DE',\n  label: 'Delaware'\n}, {\n  value: 'FL',\n  label: 'Florida'\n}, {\n  value: 'GA',\n  label: 'Georgia'\n}, {\n  value: 'HI',\n  label: 'Hawaii'\n}, {\n  value: 'ID',\n  label: 'Idaho'\n}, {\n  value: 'IL',\n  label: 'Illinois'\n}, {\n  value: 'IN',\n  label: 'Indiana'\n}, {\n  value: 'IA',\n  label: 'Iowa'\n}, {\n  value: 'KS',\n  label: 'Kansas'\n}, {\n  value: 'KY',\n  label: 'Kentucky'\n}, {\n  value: 'LA',\n  label: 'Louisiana'\n}, {\n  value: 'ME',\n  label: 'Maine'\n}, {\n  value: 'MD',\n  label: 'Maryland'\n}, {\n  value: 'MA',\n  label: 'Massachusetts'\n}, {\n  value: 'MI',\n  label: 'Michigan'\n}, {\n  value: 'MN',\n  label: 'Minnesota'\n}, {\n  value: 'MS',\n  label: 'Mississippi'\n}, {\n  value: 'MO',\n  label: 'Missouri'\n}, {\n  value: 'MT',\n  label: 'Montana'\n}, {\n  value: 'NE',\n  label: 'Nebraska'\n}, {\n  value: 'NV',\n  label: 'Nevada'\n}, {\n  value: 'NH',\n  label: 'New Hampshire'\n}, {\n  value: 'NJ',\n  label: 'New Jersey'\n}, {\n  value: 'NM',\n  label: 'New Mexico'\n}, {\n  value: 'NY',\n  label: 'New York'\n}, {\n  value: 'NC',\n  label: 'North Carolina'\n}, {\n  value: 'ND',\n  label: 'North Dakota'\n}, {\n  value: 'OH',\n  label: 'Ohio'\n}, {\n  value: 'OK',\n  label: 'Oklahoma'\n}, {\n  value: 'OR',\n  label: 'Oregon'\n}, {\n  value: 'PA',\n  label: 'Pennsylvania'\n}, {\n  value: 'RI',\n  label: 'Rhode Island'\n}, {\n  value: 'SC',\n  label: 'South Carolina'\n}, {\n  value: 'SD',\n  label: 'South Dakota'\n}, {\n  value: 'TN',\n  label: 'Tennessee'\n}, {\n  value: 'TX',\n  label: 'Texas'\n}, {\n  value: 'UT',\n  label: 'Utah'\n}, {\n  value: 'VT',\n  label: 'Vermont'\n}, {\n  value: 'VA',\n  label: 'Virginia'\n}, {\n  value: 'WA',\n  label: 'Washington'\n}, {\n  value: 'WV',\n  label: 'West Virginia'\n}, {\n  value: 'WI',\n  label: 'Wisconsin'\n}, {\n  value: 'WY',\n  label: 'Wyoming'\n}];\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [markerPosition, setMarkerPosition] = useState(null);\n  const [markerDescription, setMarkerDescription] = useState('');\n  const mapRef = useRef();\n  const [selectedStates, setSelectedStates] = useState([]);\n  const [selectedCities, setSelectedCities] = useState([]);\n  const [selectedCounties, setSelectedCounties] = useState([]);\n  const [displayFoliumMap, setDisplayFoliumMap] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [clickedLat, setClickedLat] = useState(null);\n  const [clickedLng, setClickedLng] = useState(null);\n  useEffect(() => {\n    console.log('Current latitude:', clickedLat);\n    console.log('Current longitude:', clickedLng);\n  }, [clickedLat, clickedLng]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const lat = position.coords.latitude;\n      const lng = position.coords.longitude;\n      setMarkerPosition([lat, lng]);\n    });\n  }, []);\n  const handleMapClick = e => {\n    const lat = e.latlng.lat;\n    const lng = e.latlng.lng;\n\n    // Update marker position and set description\n    setMarkerPosition([lat, lng]);\n    setMarkerDescription(`Latitude: ${lat}, Longitude: ${lng}`);\n\n    // Create a popup and add it to the marker\n    const popup = new L.Popup();\n    popup.setContent(`Latitude: ${lat}, Longitude: ${lng}`);\n\n    // Create the marker only after a place is clicked\n    const marker = new L.marker([lat, lng]);\n    marker.bindPopup(popup);\n    marker.on('click', e => {\n      e.target.openPopup();\n    });\n\n    // Prevent zooming on map click\n    e.stopPropagation();\n\n    // Update map center to the clicked location without zooming\n    mapInstance.panTo(new L.LatLng(lat, lng));\n\n    // Render the marker only when markerPosition is not null\n    return markerPosition && /*#__PURE__*/_jsxDEV(Marker, {\n      position: markerPosition,\n      description: markerDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 30\n    }, this);\n  };\n\n  // const [selectedState, setSelectedState] = useState(null);\n  // const [dateRange] = useState({ startDate: '', endDate: '' });\n\n  const [showTraffic] = useState(true);\n  const [showConstruction] = useState(true);\n  const [realTimeData] = useState(false);\n  const [accidentType, setAccidentType] = useState('');\n  const [constructionType, setConstructionType] = useState('');\n  const [geographicArea, setGeographicArea] = useState('');\n  const [timeOfDay, setTimeOfDay] = useState('');\n  const imageUrls = ['Images/download.jpeg', 'Images/641968.jpg', 'Images/641968.jpg', 'Images/641968.jpg'];\n  const [toggleState, setToggleState] = useState('option1');\n  const handleToggleChange = event => {\n    setToggleState(event.target.value);\n  };\n  const handleStateChange = selectedOption => {\n    setSelectedStates(selectedOption);\n  };\n  const handleCityChange = selectedOptions => {\n    setSelectedCities(selectedOptions);\n    console.log(selectedCities);\n  };\n  const handleCountyChange = selectedOptions => {\n    setSelectedCounties(selectedOptions);\n  };\n  const handleReset = () => {\n    // Resetting all the state variables to their initial states\n    // For example, if you have a state variable named 'selectedCities':\n    setSelectedCities([]);\n\n    // Do this for all other state variables you want to reset\n    // ...\n\n    setDisplayFoliumMap(false);\n    setShowAnalysis(false);\n    setLoading(false);\n  };\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const marker = new L.marker(markerPosition); // Initialize marker with valid coordinates\n\n  // Event handlers for date changes\n  const handleStartDateChange = event => {\n    setStartDate(event.target.value);\n  };\n  const handleEndDateChange = event => {\n    setEndDate(event.target.value);\n  };\n  const handleModalSubmit = data => {\n    console.log('Data from modal:', data);\n    // Here you can process the data and associate it with the marker\n  };\n  const Modal = ({\n    isOpen,\n    onClose,\n    onSubmit\n  }) => {\n    _s();\n    const [location, setLocation] = useState('');\n    const [description, setDescription] = useState('');\n    const handleSubmit = () => {\n      onSubmit({\n        location,\n        description\n      });\n      onClose();\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: isOpen ? 'block' : 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: location,\n        onChange: e => setLocation(e.target.value),\n        placeholder: \"Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this);\n  };\n  _s(Modal, \"6vnL1Ht5I+g0woMpY90g3n7cTyA=\");\n  const [showAnalysis, setShowAnalysis] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const handleGenerateReport = () => {\n    setLoading(true); // Start loading\n\n    // Simulate a delay for fetching data from the backend\n    setTimeout(async () => {\n      try {\n        await handleSubmit();\n        setDisplayFoliumMap(true);\n        setShowAnalysis(true);\n      } catch (error) {\n        console.error('Error during data submission:', error);\n        // Optionally set an error state here to notify the user\n      } finally {\n        setLoading(false); // End loading, regardless of success or failure\n      }\n    }, 2000); // This timeout represents the time taken to get the data from the backend\n  };\n  const handleSubmit = async () => {\n    const payload = {\n      selectedStates: selectedStates.map(state => state.value),\n      selectedCities: selectedCities.map(city => city.value),\n      selectedCounties: selectedCounties.map(county => county.value),\n      startDate: startDate,\n      endDate: endDate,\n      toggleState: toggleState\n    };\n    console.log('Payload:', payload);\n    return payload;\n\n    // Send payload to the backend\n    // const response = await fetch('YOUR_BACKEND_ENDPOINT', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   },\n    //   body: JSON.stringify(payload)\n    // });\n\n    // if (!response.ok) {\n    //   throw new Error(`HTTP error! status: ${response.status}`);\n    // }\n\n    // return response.json();\n  };\n  console.log('Current latitude:', clickedLat);\n  console.log('Current longitude:', clickedLng);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [clickedLat !== null && clickedLng !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Latitude: \", clickedLat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Longitude: \", clickedLng]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [!displayFoliumMap ? /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: defaultCenter,\n        zoom: defaultZoom,\n        className: \"map\",\n        whenCreated: mapInstance => {\n          if (mapInstance) {\n            mapInstance.on('click', handleMapClick);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), markerPosition && /*#__PURE__*/_jsxDEV(Marker, {\n          position: markerPosition,\n          description: markerDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: `${process.env.PUBLIC_URL}/map.html`,\n        title: \"Folium Map\",\n        className: \"map\"\n        //style={{ width: '100%', height: '500px' }}\n        ,\n        frameBorder: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Filter Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Choose Dataset :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"three-way-toggle\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"toggleOption1\",\n              name: \"toggle\",\n              value: \"option1\",\n              checked: toggleState === 'option1',\n              onChange: handleToggleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"toggleOption1\",\n              children: \"Constructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"toggleOption2\",\n              name: \"toggle\",\n              value: \"option2\",\n              checked: toggleState === 'option2',\n              onChange: handleToggleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"toggleOption2\",\n              children: \"Accidents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"toggleOption3\",\n              name: \"toggle\",\n              value: \"option3\",\n              checked: toggleState === 'option3',\n              onChange: handleToggleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"toggleOption3\",\n              children: \"Co-relation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"state-select\",\n            children: \"Select State:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"state-select\",\n            value: selectedStates,\n            onChange: handleStateChange,\n            options: usStates,\n            isMulti: true,\n            isClearable: true,\n            isSearchable: true,\n            closeMenuOnSelect: false,\n            classNamePrefix: \"select\",\n            placeholder: \"Search and select states...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"city-select\",\n            children: \"Enter City(s):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Creatable, {\n            id: \"city-select\",\n            value: selectedCities,\n            onChange: handleCityChange,\n            isMulti: true,\n            isClearable: true,\n            placeholder: \"Type and press enter...\",\n            classNamePrefix: \"select\"\n            // menuIsOpen={false}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"county-select\",\n            children: \"Enter County(s):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Creatable, {\n            id: \"county-select\",\n            value: selectedCounties,\n            onChange: handleCountyChange,\n            isMulti: true,\n            isClearable: true,\n            placeholder: \"Type and press enter...\",\n            classNamePrefix: \"select\"\n            // menuIsOpen={false}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-picker\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"startDate\",\n            children: \"Start Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"startDate\",\n            name: \"startDate\",\n            value: startDate,\n            onChange: handleStartDateChange // Update state when date is picked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-picker\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"endDate\",\n            children: \"End Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"endDate\",\n            name: \"endDate\",\n            value: endDate,\n            onChange: handleEndDateChange,\n            min: startDate,\n            disabled: !startDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-btn\",\n          onClick: handleReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"generate-report-btn\",\n          onClick: handleGenerateReport,\n          children: [loading ? \"Loading...\" : \"Generate Report\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(true),\n          children: \"Add New Data Point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModal,\n      onClose: () => setShowModal(false),\n      onSubmit: handleModalSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        borderTop: '2px solid #0e0f0e',\n        margin: '20px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }, this), showAnalysis && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 13\n      }, this), imageUrls.map((url, index) =>\n      // Only create a new row for even indices\n      index % 2 === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.PUBLIC_URL + '/' + imageUrls[index],\n          alt: `Analysis ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 19\n        }, this), imageUrls[index + 1] ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.PUBLIC_URL + '/' + imageUrls[index + 1],\n          alt: `Analysis ${index + 2}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 21\n        }, this) : null]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 17\n      }, this) : null)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"BzOwFRP/H9dZCCLE/Kmxn277is4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Popup","L","Select","Creatable","jsxDEV","_jsxDEV","defaultCenter","defaultZoom","usStates","value","label","App","_s2","_s","$RefreshSig$","markerPosition","setMarkerPosition","markerDescription","setMarkerDescription","mapRef","selectedStates","setSelectedStates","selectedCities","setSelectedCities","selectedCounties","setSelectedCounties","displayFoliumMap","setDisplayFoliumMap","showModal","setShowModal","clickedLat","setClickedLat","clickedLng","setClickedLng","console","log","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","handleMapClick","e","latlng","popup","setContent","marker","bindPopup","on","target","openPopup","stopPropagation","mapInstance","panTo","LatLng","description","fileName","_jsxFileName","lineNumber","columnNumber","showTraffic","showConstruction","realTimeData","accidentType","setAccidentType","constructionType","setConstructionType","geographicArea","setGeographicArea","timeOfDay","setTimeOfDay","imageUrls","toggleState","setToggleState","handleToggleChange","event","handleStateChange","selectedOption","handleCityChange","selectedOptions","handleCountyChange","handleReset","setShowAnalysis","setLoading","startDate","setStartDate","endDate","setEndDate","handleStartDateChange","handleEndDateChange","handleModalSubmit","data","Modal","isOpen","onClose","onSubmit","location","setLocation","setDescription","handleSubmit","style","display","children","type","onChange","placeholder","onClick","showAnalysis","loading","handleGenerateReport","setTimeout","error","payload","map","state","city","county","className","center","zoom","whenCreated","url","attribution","src","process","env","PUBLIC_URL","title","frameBorder","id","name","checked","htmlFor","options","isMulti","isClearable","isSearchable","closeMenuOnSelect","classNamePrefix","min","disabled","borderTop","margin","index","alt","_c","$RefreshReg$"],"sources":["/Users/amit/Documents/GitHub/SpatialNavigators/src/App.js"],"sourcesContent":["// import React, { useState, useRef } from 'react';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport Select from 'react-select';\nimport Creatable from 'react-select/creatable';\nimport './App.css';\nimport 'leaflet/dist/leaflet.css';\n\n\nconst defaultCenter = [39.8283, -98.5795];\nconst defaultZoom = 15;\n\nconst usStates = [\n  { value: 'AL', label: 'Alabama' },\n  { value: 'AK', label: 'Alaska' },\n  { value: 'AZ', label: 'Arizona' },\n  { value: 'AR', label: 'Arkansas' },\n  { value: 'CA', label: 'California' },\n  { value: 'CO', label: 'Colorado' },\n  { value: 'CT', label: 'Connecticut' },\n  { value: 'DE', label: 'Delaware' },\n  { value: 'FL', label: 'Florida' },\n  { value: 'GA', label: 'Georgia' },\n  { value: 'HI', label: 'Hawaii' },\n  { value: 'ID', label: 'Idaho' },\n  { value: 'IL', label: 'Illinois' },\n  { value: 'IN', label: 'Indiana' },\n  { value: 'IA', label: 'Iowa' },\n  { value: 'KS', label: 'Kansas' },\n  { value: 'KY', label: 'Kentucky' },\n  { value: 'LA', label: 'Louisiana' },\n  { value: 'ME', label: 'Maine' },\n  { value: 'MD', label: 'Maryland' },\n  { value: 'MA', label: 'Massachusetts' },\n  { value: 'MI', label: 'Michigan' },\n  { value: 'MN', label: 'Minnesota' },\n  { value: 'MS', label: 'Mississippi' },\n  { value: 'MO', label: 'Missouri' },\n  { value: 'MT', label: 'Montana' },\n  { value: 'NE', label: 'Nebraska' },\n  { value: 'NV', label: 'Nevada' },\n  { value: 'NH', label: 'New Hampshire' },\n  { value: 'NJ', label: 'New Jersey' },\n  { value: 'NM', label: 'New Mexico' },\n  { value: 'NY', label: 'New York' },\n  { value: 'NC', label: 'North Carolina' },\n  { value: 'ND', label: 'North Dakota' },\n  { value: 'OH', label: 'Ohio' },\n  { value: 'OK', label: 'Oklahoma' },\n  { value: 'OR', label: 'Oregon' },\n  { value: 'PA', label: 'Pennsylvania' },\n  { value: 'RI', label: 'Rhode Island' },\n  { value: 'SC', label: 'South Carolina' },\n  { value: 'SD', label: 'South Dakota' },\n  { value: 'TN', label: 'Tennessee' },\n  { value: 'TX', label: 'Texas' },\n  { value: 'UT', label: 'Utah' },\n  { value: 'VT', label: 'Vermont' },\n  { value: 'VA', label: 'Virginia' },\n  { value: 'WA', label: 'Washington' },\n  { value: 'WV', label: 'West Virginia' },\n  { value: 'WI', label: 'Wisconsin' },\n  { value: 'WY', label: 'Wyoming' }\n];\n\n\nfunction App() {\n  const [markerPosition, setMarkerPosition] = useState(null);\n  const [markerDescription, setMarkerDescription] = useState('');\n  const mapRef = useRef();\n  const [selectedStates, setSelectedStates] = useState([]);\n  const [selectedCities, setSelectedCities] = useState([]);\n  const [selectedCounties, setSelectedCounties] = useState([]);\n  const [displayFoliumMap, setDisplayFoliumMap] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [clickedLat, setClickedLat] = useState(null);\n  const [clickedLng, setClickedLng] = useState(null);\n\n  useEffect(() => {\n    console.log('Current latitude:', clickedLat);\n    console.log('Current longitude:', clickedLng);\n  }, [clickedLat, clickedLng]);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      const lat = position.coords.latitude;\n      const lng = position.coords.longitude;\n      setMarkerPosition([lat, lng]);\n    });\n  }, []);\n\n  const handleMapClick = (e) => {\n    const lat = e.latlng.lat;\n    const lng = e.latlng.lng;\n  \n    // Update marker position and set description\n    setMarkerPosition([lat, lng]);\n    setMarkerDescription(`Latitude: ${lat}, Longitude: ${lng}`);\n  \n    // Create a popup and add it to the marker\n    const popup = new L.Popup();\n    popup.setContent(`Latitude: ${lat}, Longitude: ${lng}`);\n  \n    // Create the marker only after a place is clicked\n    const marker = new L.marker([lat, lng]);\n    marker.bindPopup(popup);\n    marker.on('click', (e) => {\n      e.target.openPopup();\n    });\n  \n    // Prevent zooming on map click\n    e.stopPropagation();\n  \n    // Update map center to the clicked location without zooming\n    mapInstance.panTo(new L.LatLng(lat, lng));\n  \n    // Render the marker only when markerPosition is not null\n    return markerPosition && <Marker position={markerPosition} description={markerDescription} />;\n  };  \n\n  // const [selectedState, setSelectedState] = useState(null);\n  // const [dateRange] = useState({ startDate: '', endDate: '' });\n\n  const [showTraffic] = useState(true);\n  const [showConstruction] = useState(true);\n  const [realTimeData] = useState(false);\n  const [accidentType, setAccidentType] = useState('');\n  const [constructionType, setConstructionType] = useState('');\n  const [geographicArea, setGeographicArea] = useState('');\n  const [timeOfDay, setTimeOfDay] = useState('');\n  const imageUrls = [\n    'Images/download.jpeg',\n    'Images/641968.jpg',\n    'Images/641968.jpg',\n    'Images/641968.jpg'\n\n  ];\n  const [toggleState, setToggleState] = useState('option1');\n  const handleToggleChange = (event) => {\n    setToggleState(event.target.value);\n  };\n\n  const handleStateChange = selectedOption => {\n    setSelectedStates(selectedOption);\n  };\n\n  const handleCityChange = selectedOptions => {\n    setSelectedCities(selectedOptions);\n    console.log(selectedCities);\n  };\n\n  const handleCountyChange = selectedOptions => {\n    setSelectedCounties(selectedOptions);\n  };\n\n  const handleReset = () => {\n    // Resetting all the state variables to their initial states\n    // For example, if you have a state variable named 'selectedCities':\n    setSelectedCities([]);\n\n    // Do this for all other state variables you want to reset\n    // ...\n\n    setDisplayFoliumMap(false);\n    setShowAnalysis(false);\n    setLoading(false);\n  };\n\n\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const marker = new L.marker(markerPosition); // Initialize marker with valid coordinates\n\n\n\n\n\n  // Event handlers for date changes\n  const handleStartDateChange = (event) => {\n    setStartDate(event.target.value);\n  };\n\n  const handleEndDateChange = (event) => {\n    setEndDate(event.target.value);\n  };\n\n  const handleModalSubmit = (data) => {\n    console.log('Data from modal:', data);\n    // Here you can process the data and associate it with the marker\n  };\n\n\n  const Modal = ({ isOpen, onClose, onSubmit }) => {\n    const [location, setLocation] = useState('');\n    const [description, setDescription] = useState('');\n\n    const handleSubmit = () => {\n      onSubmit({ location, description });\n      onClose();\n    };\n\n    \n\n    return (\n      \n      <div style={{ display: isOpen ? 'block' : 'none' }}>\n        {/* Modal content */}\n        <input type=\"text\" value={location} onChange={(e) => setLocation(e.target.value)} placeholder=\"Location\" />\n        <textarea value={description} onChange={(e) => setDescription(e.target.value)} placeholder=\"Description\"></textarea>\n        <button onClick={handleSubmit}>Submit</button>\n        <button onClick={onClose}>Close</button>\n      </div>\n    );\n  };\n\n\n  const [showAnalysis, setShowAnalysis] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const handleGenerateReport = () => {\n    setLoading(true); // Start loading\n\n    // Simulate a delay for fetching data from the backend\n    setTimeout(async () => {\n      try {\n\n        await handleSubmit();\n\n        setDisplayFoliumMap(true);\n\n        setShowAnalysis(true);\n      } catch (error) {\n        console.error('Error during data submission:', error);\n        // Optionally set an error state here to notify the user\n      } finally {\n        setLoading(false); // End loading, regardless of success or failure\n      }\n    }, 2000); // This timeout represents the time taken to get the data from the backend\n  };\n\n\n  const handleSubmit = async () => {\n    const payload = {\n      selectedStates: selectedStates.map(state => state.value),\n      selectedCities: selectedCities.map(city => city.value),\n      selectedCounties: selectedCounties.map(county => county.value),\n      startDate: startDate,\n      endDate: endDate,\n      toggleState: toggleState\n    };\n\n    console.log('Payload:', payload);\n    return payload;\n\n    // Send payload to the backend\n    // const response = await fetch('YOUR_BACKEND_ENDPOINT', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   },\n    //   body: JSON.stringify(payload)\n    // });\n\n    // if (!response.ok) {\n    //   throw new Error(`HTTP error! status: ${response.status}`);\n    // }\n\n    // return response.json();\n  };\n\n  console.log('Current latitude:', clickedLat);\n  console.log('Current longitude:', clickedLng);\n\n\n  return (\n\n    \n    <div className=\"App\">\n\n    {clickedLat !== null && clickedLng !== null && (\n      <div>\n        <p>Latitude: {clickedLat}</p>\n        <p>Longitude: {clickedLng}</p>\n      </div>\n    )}\n      {/* <Map ref={mapRef} center={defaultCenter} zoom={defaultZoom} className=\"map\">\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; OpenStreetMap contributors\"\n        />\n      </Map> */}\n      {/* <div className=\"App\"> */}\n\n      \n      {/* {clickedLat && clickedLng && (\n        <div>\n          <p>Latitude: {clickedLat}</p>\n          <p>Longitude: {clickedLng}</p>\n        </div>\n      )} */}\n      {/* </div> */}\n\n      <div className=\"content\">\n\n        \n        {/* Map Section - Leaflet Map or Folium Map */}\n        {!displayFoliumMap ? (\n          <MapContainer center={defaultCenter} zoom={defaultZoom} className=\"map\" whenCreated={(mapInstance) => {\n            if (mapInstance) {\n              mapInstance.on('click', handleMapClick);\n            }\n          }}>\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" attribution=\"&copy; OpenStreetMap contributors\" />\n            {markerPosition && <Marker position={markerPosition} description={markerDescription} />}\n          </MapContainer>\n        ) : (\n          <iframe\n            src={`${process.env.PUBLIC_URL}/map.html`}\n            title=\"Folium Map\"\n            className=\"map\"\n            //style={{ width: '100%', height: '500px' }}\n            frameBorder=\"0\"\n          ></iframe>\n        )}\n\n        <div className=\"sidebar\">\n          <h2>Filter Panel</h2>\n          {/* Existing filters... */}\n          {/* New filters added below */}\n          <div className=\"filter-option\">\n            <label>Choose Dataset :</label>\n            <div className=\"three-way-toggle\">\n              <input\n                type=\"radio\"\n                id=\"toggleOption1\"\n                name=\"toggle\"\n                value=\"option1\"\n                checked={toggleState === 'option1'}\n                onChange={handleToggleChange}\n              />\n              <label htmlFor=\"toggleOption1\">Constructions</label>\n\n              <input\n                type=\"radio\"\n                id=\"toggleOption2\"\n                name=\"toggle\"\n                value=\"option2\"\n                checked={toggleState === 'option2'}\n                onChange={handleToggleChange}\n              />\n              <label htmlFor=\"toggleOption2\">Accidents</label>\n\n              <input\n                type=\"radio\"\n                id=\"toggleOption3\"\n                name=\"toggle\"\n                value=\"option3\"\n                checked={toggleState === 'option3'}\n                onChange={handleToggleChange}\n              />\n              <label htmlFor=\"toggleOption3\">Co-relation</label>\n            </div>\n          </div>\n\n\n          <div className=\"filter-option\">\n            <label htmlFor=\"state-select\">Select State:</label>\n            <Select\n              id=\"state-select\"\n              value={selectedStates}\n              onChange={handleStateChange}\n              options={usStates}\n              isMulti={true}\n              isClearable={true}\n              isSearchable={true}\n              closeMenuOnSelect={false}\n              classNamePrefix=\"select\"\n              placeholder=\"Search and select states...\"\n            />\n          </div>\n\n          <div className=\"filter-option\">\n            <label htmlFor=\"city-select\">Enter City(s):</label>\n            <Creatable\n              id=\"city-select\"\n              value={selectedCities}\n              onChange={handleCityChange}\n              isMulti={true}\n              isClearable={true}\n              placeholder=\"Type and press enter...\"\n              classNamePrefix=\"select\"\n            // menuIsOpen={false}\n            />\n          </div>\n\n          <div className=\"filter-option\">\n            <label htmlFor=\"county-select\">Enter County(s):</label>\n            <Creatable\n              id=\"county-select\"\n              value={selectedCounties}\n              onChange={handleCountyChange}\n              isMulti={true}\n              isClearable={true}\n              placeholder=\"Type and press enter...\"\n              classNamePrefix=\"select\"\n            // menuIsOpen={false}\n            />\n          </div>\n\n\n          <div className=\"date-picker\">\n            <label htmlFor=\"startDate\">Start Date:</label>\n            <input\n              type=\"date\"\n              id=\"startDate\"\n              name=\"startDate\"\n              value={startDate}\n              onChange={handleStartDateChange} // Update state when date is picked\n            />\n          </div>\n          <div className=\"date-picker\">\n            <label htmlFor=\"endDate\">End Date:</label>\n            <input\n              type=\"date\"\n              id=\"endDate\"\n              name=\"endDate\"\n              value={endDate}\n              onChange={handleEndDateChange}\n              min={startDate}\n              disabled={!startDate}\n            />\n          </div>\n\n          {/* <div className=\"date-picker\">\n          <label htmlFor=\"constructionType\">Date Range Selection</label>\n          <label htmlFor=\"constructionType\"> </label>\n          <label htmlFor=\"startDate\"> Start Date:</label>\n          <input\n            type=\"date\"\n            id=\"startDate\"\n            name=\"startDate\"\n            value={dateRange.startDate}\n          />\n        </div>\n        <div className=\"date-picker\">\n          <label htmlFor=\"endDate\">End Date:</label>\n          <input\n            type=\"date\"\n            id=\"endDate\"\n            name=\"endDate\"\n            value={dateRange.endDate}\n          />\n        </div> */}\n\n          {/* <button className=\"generate-report-btn\">Generate Report</button> */}\n          {/* <button className=\"generate-report-btn\" onClick={handleGenerateReport}>\n        {loading ? <div className=\"loading-spinner\"></div> : \"Generate Report\"}\n      </button> */}\n\n          <button className=\"reset-btn\" onClick={handleReset}>\n            Reset\n          </button>\n          <button className=\"generate-report-btn\" onClick={handleGenerateReport}>\n            {loading ? \"Loading...\" : \"Generate Report\"} {/* Loading indicator */}\n          </button>\n\n          <button onClick={() => setShowModal(true)}>Add New Data Point</button>\n\n        </div>\n      </div>\n\n      <Modal isOpen={showModal} onClose={() => setShowModal(false)} onSubmit={handleModalSubmit} />\n\n      <div style={{ borderTop: '2px solid #0e0f0e', margin: '20px 0' }}></div>\n\n\n      {\n        showAnalysis && (\n          <div className=\"analysis-section\">\n            <h1>Analysis</h1>\n            {/* Wrapping each pair of images in a .image-row div */}\n            {imageUrls.map((url, index) => (\n              // Only create a new row for even indices\n              index % 2 === 0 ? (\n                <div className=\"image-row\" key={index}>\n                  {/* First image of the pair */}\n                  <img src={process.env.PUBLIC_URL + '/' + imageUrls[index]} alt={`Analysis ${index + 1}`} />\n                  {/* Second image of the pair, if it exists */}\n                  {imageUrls[index + 1] ? (\n                    <img src={process.env.PUBLIC_URL + '/' + imageUrls[index + 1]} alt={`Analysis ${index + 2}`} />\n                  ) : null}\n                </div>\n              ) : null\n            ))}\n          </div>\n        )\n      }\n\n\n\n    </div>\n\n\n  );\n  \n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}