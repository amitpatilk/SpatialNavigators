{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Documents/GitHub/SpatialNavigators/src/App.js\",\n  _s2 = $RefreshSig$();\n// import React, { useState, useRef } from 'react';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport Select from 'react-select';\nimport Creatable from 'react-select/creatable';\nimport './App.css';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCenter = [39.8283, -98.5795];\nconst defaultZoom = 15;\nconst usStates = [{\n  value: 'AL',\n  label: 'Alabama'\n}, {\n  value: 'AK',\n  label: 'Alaska'\n}, {\n  value: 'AZ',\n  label: 'Arizona'\n}, {\n  value: 'AR',\n  label: 'Arkansas'\n}, {\n  value: 'CA',\n  label: 'California'\n}, {\n  value: 'CO',\n  label: 'Colorado'\n}, {\n  value: 'CT',\n  label: 'Connecticut'\n}, {\n  value: 'DE',\n  label: 'Delaware'\n}, {\n  value: 'FL',\n  label: 'Florida'\n}, {\n  value: 'GA',\n  label: 'Georgia'\n}, {\n  value: 'HI',\n  label: 'Hawaii'\n}, {\n  value: 'ID',\n  label: 'Idaho'\n}, {\n  value: 'IL',\n  label: 'Illinois'\n}, {\n  value: 'IN',\n  label: 'Indiana'\n}, {\n  value: 'IA',\n  label: 'Iowa'\n}, {\n  value: 'KS',\n  label: 'Kansas'\n}, {\n  value: 'KY',\n  label: 'Kentucky'\n}, {\n  value: 'LA',\n  label: 'Louisiana'\n}, {\n  value: 'ME',\n  label: 'Maine'\n}, {\n  value: 'MD',\n  label: 'Maryland'\n}, {\n  value: 'MA',\n  label: 'Massachusetts'\n}, {\n  value: 'MI',\n  label: 'Michigan'\n}, {\n  value: 'MN',\n  label: 'Minnesota'\n}, {\n  value: 'MS',\n  label: 'Mississippi'\n}, {\n  value: 'MO',\n  label: 'Missouri'\n}, {\n  value: 'MT',\n  label: 'Montana'\n}, {\n  value: 'NE',\n  label: 'Nebraska'\n}, {\n  value: 'NV',\n  label: 'Nevada'\n}, {\n  value: 'NH',\n  label: 'New Hampshire'\n}, {\n  value: 'NJ',\n  label: 'New Jersey'\n}, {\n  value: 'NM',\n  label: 'New Mexico'\n}, {\n  value: 'NY',\n  label: 'New York'\n}, {\n  value: 'NC',\n  label: 'North Carolina'\n}, {\n  value: 'ND',\n  label: 'North Dakota'\n}, {\n  value: 'OH',\n  label: 'Ohio'\n}, {\n  value: 'OK',\n  label: 'Oklahoma'\n}, {\n  value: 'OR',\n  label: 'Oregon'\n}, {\n  value: 'PA',\n  label: 'Pennsylvania'\n}, {\n  value: 'RI',\n  label: 'Rhode Island'\n}, {\n  value: 'SC',\n  label: 'South Carolina'\n}, {\n  value: 'SD',\n  label: 'South Dakota'\n}, {\n  value: 'TN',\n  label: 'Tennessee'\n}, {\n  value: 'TX',\n  label: 'Texas'\n}, {\n  value: 'UT',\n  label: 'Utah'\n}, {\n  value: 'VT',\n  label: 'Vermont'\n}, {\n  value: 'VA',\n  label: 'Virginia'\n}, {\n  value: 'WA',\n  label: 'Washington'\n}, {\n  value: 'WV',\n  label: 'West Virginia'\n}, {\n  value: 'WI',\n  label: 'Wisconsin'\n}, {\n  value: 'WY',\n  label: 'Wyoming'\n}];\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [markerPosition, setMarkerPosition] = useState(null);\n  const [markerDescription, setMarkerDescription] = useState('');\n  const mapRef = useRef();\n  const [selectedStates, setSelectedStates] = useState([]);\n  const [selectedCities, setSelectedCities] = useState([]);\n  const [selectedCounties, setSelectedCounties] = useState([]);\n  const [displayFoliumMap, setDisplayFoliumMap] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [clickedLat, setClickedLat] = useState(null);\n  const [clickedLng, setClickedLng] = useState(null);\n  useEffect(() => {\n    console.log('Current latitude:', clickedLat);\n    console.log('Current longitude:', clickedLng);\n  }, [clickedLat, clickedLng]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const lat = position.coords.latitude;\n      const lng = position.coords.longitude;\n      setMarkerPosition([lat, lng]);\n    });\n  }, []);\n  const handleMapClick = event => {\n    const {\n      latlng\n    } = event;\n    const lat = latlng.lat;\n    const lng = latlng.lng;\n\n    // Update marker position and set description\n    setMarkerPosition([lat, lng]);\n    setMarkerDescription(`Latitude: ${lat}, Longitude: ${lng}`);\n\n    // Create a popup and add it to the marker\n    const popup = new L.Popup().setContent(`Latitude: ${lat}, Longitude: ${lng}`);\n\n    // Create the marker only after a place is clicked\n    const marker = new L.Marker([lat, lng]).bindPopup(popup);\n\n    // Add the marker to the map\n    if (mapInstance) {\n      mapInstance.addLayer(marker);\n    }\n\n    // Prevent zooming on map click\n    event.originalEvent.preventDefault();\n\n    // Update map center to the clicked location without zooming\n    if (mapInstance) {\n      mapInstance.setView([lat, lng], defaultZoom);\n    }\n  };\n  handleClick = event => {\n    const {\n      lat,\n      lng\n    } = event.latlng;\n    console.log(`Clicked at ${lat}, ${lng}`);\n  };\n  const [mapInstance, setMapInstance] = useState(null);\n\n  // const [selectedState, setSelectedState] = useState(null);\n  // const [dateRange] = useState({ startDate: '', endDate: '' });\n\n  const [showTraffic] = useState(true);\n  const [showConstruction] = useState(true);\n  const [realTimeData] = useState(false);\n  const [accidentType, setAccidentType] = useState('');\n  const [constructionType, setConstructionType] = useState('');\n  const [geographicArea, setGeographicArea] = useState('');\n  const [timeOfDay, setTimeOfDay] = useState('');\n  const imageUrls = ['Images/download.jpeg', 'Images/641968.jpg', 'Images/641968.jpg', 'Images/641968.jpg'];\n  const [toggleState, setToggleState] = useState('option1');\n  const handleToggleChange = event => {\n    setToggleState(event.target.value);\n  };\n  const handleStateChange = selectedOption => {\n    setSelectedStates(selectedOption);\n  };\n  const handleCityChange = selectedOptions => {\n    setSelectedCities(selectedOptions);\n    console.log(selectedCities);\n  };\n  const handleCountyChange = selectedOptions => {\n    setSelectedCounties(selectedOptions);\n  };\n  const handleReset = () => {\n    // Resetting all the state variables to their initial states\n    // For example, if you have a state variable named 'selectedCities':\n    setSelectedCities([]);\n\n    // Do this for all other state variables you want to reset\n    // ...\n\n    setDisplayFoliumMap(false);\n    setShowAnalysis(false);\n    setLoading(false);\n  };\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const marker = new L.marker(markerPosition); // Initialize marker with valid coordinates\n\n  // Event handlers for date changes\n  const handleStartDateChange = event => {\n    setStartDate(event.target.value);\n  };\n  const handleEndDateChange = event => {\n    setEndDate(event.target.value);\n  };\n  const handleModalSubmit = data => {\n    console.log('Data from modal:', data);\n    // Here you can process the data and associate it with the marker\n  };\n  const Modal = ({\n    isOpen,\n    onClose,\n    onSubmit\n  }) => {\n    _s();\n    const [location, setLocation] = useState('');\n    const [description, setDescription] = useState('');\n    const handleSubmit = () => {\n      onSubmit({\n        location,\n        description\n      });\n      onClose();\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: isOpen ? 'block' : 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: location,\n        onChange: e => setLocation(e.target.value),\n        placeholder: \"Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this);\n  };\n  _s(Modal, \"6vnL1Ht5I+g0woMpY90g3n7cTyA=\");\n  const [showAnalysis, setShowAnalysis] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const handleGenerateReport = () => {\n    setLoading(true); // Start loading\n\n    // Simulate a delay for fetching data from the backend\n    setTimeout(async () => {\n      try {\n        await handleSubmit();\n        setDisplayFoliumMap(true);\n        setShowAnalysis(true);\n      } catch (error) {\n        console.error('Error during data submission:', error);\n        // Optionally set an error state here to notify the user\n      } finally {\n        setLoading(false); // End loading, regardless of success or failure\n      }\n    }, 2000); // This timeout represents the time taken to get the data from the backend\n  };\n  const handleSubmit = async () => {\n    const payload = {\n      selectedStates: selectedStates.map(state => state.value),\n      selectedCities: selectedCities.map(city => city.value),\n      selectedCounties: selectedCounties.map(county => county.value),\n      startDate: startDate,\n      endDate: endDate,\n      toggleState: toggleState\n    };\n    console.log('Payload:', payload);\n    return payload;\n\n    // Send payload to the backend\n    // const response = await fetch('YOUR_BACKEND_ENDPOINT', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   },\n    //   body: JSON.stringify(payload)\n    // });\n\n    // if (!response.ok) {\n    //   throw new Error(`HTTP error! status: ${response.status}`);\n    // }\n\n    // return response.json();\n  };\n  console.log('Current latitude:', clickedLat);\n  console.log('Current longitude:', clickedLng);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [clickedLat !== null && clickedLng !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Latitude: \", clickedLat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Longitude: \", clickedLng]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [!displayFoliumMap ? /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: defaultCenter,\n        zoom: defaultZoom,\n        className: \"map\",\n        onClick: handleMapClick,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 17\n        }, this), markerPosition && /*#__PURE__*/_jsxDEV(Marker, {\n          position: [50.5, 30.5],\n          eventHandlers: {\n            click: e => {\n              console.log('marker clicked', e);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: `${process.env.PUBLIC_URL}/map.html`,\n        title: \"Folium Map\",\n        className: \"map\"\n        //style={{ width: '100%', height: '500px' }}\n        ,\n        frameBorder: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Filter Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Choose Dataset :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"three-way-toggle\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"toggleOption1\",\n              name: \"toggle\",\n              value: \"option1\",\n              checked: toggleState === 'option1',\n              onChange: handleToggleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"toggleOption1\",\n              children: \"Constructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"toggleOption2\",\n              name: \"toggle\",\n              value: \"option2\",\n              checked: toggleState === 'option2',\n              onChange: handleToggleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"toggleOption2\",\n              children: \"Accidents\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"toggleOption3\",\n              name: \"toggle\",\n              value: \"option3\",\n              checked: toggleState === 'option3',\n              onChange: handleToggleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"toggleOption3\",\n              children: \"Co-relation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"state-select\",\n            children: \"Select State:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"state-select\",\n            value: selectedStates,\n            onChange: handleStateChange,\n            options: usStates,\n            isMulti: true,\n            isClearable: true,\n            isSearchable: true,\n            closeMenuOnSelect: false,\n            classNamePrefix: \"select\",\n            placeholder: \"Search and select states...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"city-select\",\n            children: \"Enter City(s):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Creatable, {\n            id: \"city-select\",\n            value: selectedCities,\n            onChange: handleCityChange,\n            isMulti: true,\n            isClearable: true,\n            placeholder: \"Type and press enter...\",\n            classNamePrefix: \"select\"\n            // menuIsOpen={false}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"county-select\",\n            children: \"Enter County(s):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Creatable, {\n            id: \"county-select\",\n            value: selectedCounties,\n            onChange: handleCountyChange,\n            isMulti: true,\n            isClearable: true,\n            placeholder: \"Type and press enter...\",\n            classNamePrefix: \"select\"\n            // menuIsOpen={false}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-picker\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"startDate\",\n            children: \"Start Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"startDate\",\n            name: \"startDate\",\n            value: startDate,\n            onChange: handleStartDateChange // Update state when date is picked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-picker\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"endDate\",\n            children: \"End Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"endDate\",\n            name: \"endDate\",\n            value: endDate,\n            onChange: handleEndDateChange,\n            min: startDate,\n            disabled: !startDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-btn\",\n          onClick: handleReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"generate-report-btn\",\n          onClick: handleGenerateReport,\n          children: [loading ? \"Loading...\" : \"Generate Report\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(true),\n          children: \"Add New Data Point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModal,\n      onClose: () => setShowModal(false),\n      onSubmit: handleModalSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        borderTop: '2px solid #0e0f0e',\n        margin: '20px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this), showAnalysis && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 13\n      }, this), imageUrls.map((url, index) =>\n      // Only create a new row for even indices\n      index % 2 === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.PUBLIC_URL + '/' + imageUrls[index],\n          alt: `Analysis ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 19\n        }, this), imageUrls[index + 1] ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.PUBLIC_URL + '/' + imageUrls[index + 1],\n          alt: `Analysis ${index + 2}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 21\n        }, this) : null]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 17\n      }, this) : null)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"BCougdOxS3eEfxSLRqdiwDhy7fk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Popup","L","Select","Creatable","jsxDEV","_jsxDEV","defaultCenter","defaultZoom","usStates","value","label","App","_s2","_s","$RefreshSig$","markerPosition","setMarkerPosition","markerDescription","setMarkerDescription","mapRef","selectedStates","setSelectedStates","selectedCities","setSelectedCities","selectedCounties","setSelectedCounties","displayFoliumMap","setDisplayFoliumMap","showModal","setShowModal","clickedLat","setClickedLat","clickedLng","setClickedLng","console","log","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","handleMapClick","event","latlng","popup","setContent","marker","bindPopup","mapInstance","addLayer","originalEvent","preventDefault","setView","handleClick","setMapInstance","showTraffic","showConstruction","realTimeData","accidentType","setAccidentType","constructionType","setConstructionType","geographicArea","setGeographicArea","timeOfDay","setTimeOfDay","imageUrls","toggleState","setToggleState","handleToggleChange","target","handleStateChange","selectedOption","handleCityChange","selectedOptions","handleCountyChange","handleReset","setShowAnalysis","setLoading","startDate","setStartDate","endDate","setEndDate","handleStartDateChange","handleEndDateChange","handleModalSubmit","data","Modal","isOpen","onClose","onSubmit","location","setLocation","description","setDescription","handleSubmit","style","display","children","type","onChange","e","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","showAnalysis","loading","handleGenerateReport","setTimeout","error","payload","map","state","city","county","className","center","zoom","url","attribution","eventHandlers","click","src","process","env","PUBLIC_URL","title","frameBorder","id","name","checked","htmlFor","options","isMulti","isClearable","isSearchable","closeMenuOnSelect","classNamePrefix","min","disabled","borderTop","margin","index","alt","_c","$RefreshReg$"],"sources":["/Users/amit/Documents/GitHub/SpatialNavigators/src/App.js"],"sourcesContent":["// import React, { useState, useRef } from 'react';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport Select from 'react-select';\nimport Creatable from 'react-select/creatable';\nimport './App.css';\nimport 'leaflet/dist/leaflet.css';\n\n\nconst defaultCenter = [39.8283, -98.5795];\nconst defaultZoom = 15;\n\nconst usStates = [\n  { value: 'AL', label: 'Alabama' },\n  { value: 'AK', label: 'Alaska' },\n  { value: 'AZ', label: 'Arizona' },\n  { value: 'AR', label: 'Arkansas' },\n  { value: 'CA', label: 'California' },\n  { value: 'CO', label: 'Colorado' },\n  { value: 'CT', label: 'Connecticut' },\n  { value: 'DE', label: 'Delaware' },\n  { value: 'FL', label: 'Florida' },\n  { value: 'GA', label: 'Georgia' },\n  { value: 'HI', label: 'Hawaii' },\n  { value: 'ID', label: 'Idaho' },\n  { value: 'IL', label: 'Illinois' },\n  { value: 'IN', label: 'Indiana' },\n  { value: 'IA', label: 'Iowa' },\n  { value: 'KS', label: 'Kansas' },\n  { value: 'KY', label: 'Kentucky' },\n  { value: 'LA', label: 'Louisiana' },\n  { value: 'ME', label: 'Maine' },\n  { value: 'MD', label: 'Maryland' },\n  { value: 'MA', label: 'Massachusetts' },\n  { value: 'MI', label: 'Michigan' },\n  { value: 'MN', label: 'Minnesota' },\n  { value: 'MS', label: 'Mississippi' },\n  { value: 'MO', label: 'Missouri' },\n  { value: 'MT', label: 'Montana' },\n  { value: 'NE', label: 'Nebraska' },\n  { value: 'NV', label: 'Nevada' },\n  { value: 'NH', label: 'New Hampshire' },\n  { value: 'NJ', label: 'New Jersey' },\n  { value: 'NM', label: 'New Mexico' },\n  { value: 'NY', label: 'New York' },\n  { value: 'NC', label: 'North Carolina' },\n  { value: 'ND', label: 'North Dakota' },\n  { value: 'OH', label: 'Ohio' },\n  { value: 'OK', label: 'Oklahoma' },\n  { value: 'OR', label: 'Oregon' },\n  { value: 'PA', label: 'Pennsylvania' },\n  { value: 'RI', label: 'Rhode Island' },\n  { value: 'SC', label: 'South Carolina' },\n  { value: 'SD', label: 'South Dakota' },\n  { value: 'TN', label: 'Tennessee' },\n  { value: 'TX', label: 'Texas' },\n  { value: 'UT', label: 'Utah' },\n  { value: 'VT', label: 'Vermont' },\n  { value: 'VA', label: 'Virginia' },\n  { value: 'WA', label: 'Washington' },\n  { value: 'WV', label: 'West Virginia' },\n  { value: 'WI', label: 'Wisconsin' },\n  { value: 'WY', label: 'Wyoming' }\n];\n\n\nfunction App() {\n  const [markerPosition, setMarkerPosition] = useState(null);\n  const [markerDescription, setMarkerDescription] = useState('');\n  const mapRef = useRef();\n  const [selectedStates, setSelectedStates] = useState([]);\n  const [selectedCities, setSelectedCities] = useState([]);\n  const [selectedCounties, setSelectedCounties] = useState([]);\n  const [displayFoliumMap, setDisplayFoliumMap] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [clickedLat, setClickedLat] = useState(null);\n  const [clickedLng, setClickedLng] = useState(null);\n\n  useEffect(() => {\n    console.log('Current latitude:', clickedLat);\n    console.log('Current longitude:', clickedLng);\n  }, [clickedLat, clickedLng]);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      const lat = position.coords.latitude;\n      const lng = position.coords.longitude;\n      setMarkerPosition([lat, lng]);\n    });\n  }, []);\n\n  const handleMapClick = (event) => {\n    const { latlng } = event;\n    const lat = latlng.lat;\n    const lng = latlng.lng;\n\n    // Update marker position and set description\n    setMarkerPosition([lat, lng]);\n    setMarkerDescription(`Latitude: ${lat}, Longitude: ${lng}`);\n\n    // Create a popup and add it to the marker\n    const popup = new L.Popup().setContent(`Latitude: ${lat}, Longitude: ${lng}`);\n\n    // Create the marker only after a place is clicked\n    const marker = new L.Marker([lat, lng]).bindPopup(popup);\n\n    // Add the marker to the map\n    if (mapInstance) {\n      mapInstance.addLayer(marker);\n    }\n\n    // Prevent zooming on map click\n    event.originalEvent.preventDefault();\n\n    // Update map center to the clicked location without zooming\n    if (mapInstance) {\n      mapInstance.setView([lat, lng], defaultZoom);\n    }\n  };\n\n  handleClick = event => {\n    const { lat, lng } = event.latlng\n    console.log(`Clicked at ${lat}, ${lng}`)\n  }\n\n  const [mapInstance, setMapInstance] = useState(null);\n\n  // const [selectedState, setSelectedState] = useState(null);\n  // const [dateRange] = useState({ startDate: '', endDate: '' });\n\n  const [showTraffic] = useState(true);\n  const [showConstruction] = useState(true);\n  const [realTimeData] = useState(false);\n  const [accidentType, setAccidentType] = useState('');\n  const [constructionType, setConstructionType] = useState('');\n  const [geographicArea, setGeographicArea] = useState('');\n  const [timeOfDay, setTimeOfDay] = useState('');\n  const imageUrls = [\n    'Images/download.jpeg',\n    'Images/641968.jpg',\n    'Images/641968.jpg',\n    'Images/641968.jpg'\n\n  ];\n  const [toggleState, setToggleState] = useState('option1');\n  const handleToggleChange = (event) => {\n    setToggleState(event.target.value);\n  };\n\n  const handleStateChange = selectedOption => {\n    setSelectedStates(selectedOption);\n  };\n\n  const handleCityChange = selectedOptions => {\n    setSelectedCities(selectedOptions);\n    console.log(selectedCities);\n  };\n\n  const handleCountyChange = selectedOptions => {\n    setSelectedCounties(selectedOptions);\n  };\n\n  const handleReset = () => {\n    // Resetting all the state variables to their initial states\n    // For example, if you have a state variable named 'selectedCities':\n    setSelectedCities([]);\n\n    // Do this for all other state variables you want to reset\n    // ...\n\n    setDisplayFoliumMap(false);\n    setShowAnalysis(false);\n    setLoading(false);\n  };\n\n\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const marker = new L.marker(markerPosition); // Initialize marker with valid coordinates\n\n\n\n\n\n  // Event handlers for date changes\n  const handleStartDateChange = (event) => {\n    setStartDate(event.target.value);\n  };\n\n  const handleEndDateChange = (event) => {\n    setEndDate(event.target.value);\n  };\n\n  const handleModalSubmit = (data) => {\n    console.log('Data from modal:', data);\n    // Here you can process the data and associate it with the marker\n  };\n\n\n  const Modal = ({ isOpen, onClose, onSubmit }) => {\n    const [location, setLocation] = useState('');\n    const [description, setDescription] = useState('');\n\n    const handleSubmit = () => {\n      onSubmit({ location, description });\n      onClose();\n    };\n\n    \n\n    return (\n      \n      <div style={{ display: isOpen ? 'block' : 'none' }}>\n        {/* Modal content */}\n        <input type=\"text\" value={location} onChange={(e) => setLocation(e.target.value)} placeholder=\"Location\" />\n        <textarea value={description} onChange={(e) => setDescription(e.target.value)} placeholder=\"Description\"></textarea>\n        <button onClick={handleSubmit}>Submit</button>\n        <button onClick={onClose}>Close</button>\n      </div>\n    );\n  };\n\n\n  const [showAnalysis, setShowAnalysis] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const handleGenerateReport = () => {\n    setLoading(true); // Start loading\n\n    // Simulate a delay for fetching data from the backend\n    setTimeout(async () => {\n      try {\n\n        await handleSubmit();\n\n        setDisplayFoliumMap(true);\n\n        setShowAnalysis(true);\n      } catch (error) {\n        console.error('Error during data submission:', error);\n        // Optionally set an error state here to notify the user\n      } finally {\n        setLoading(false); // End loading, regardless of success or failure\n      }\n    }, 2000); // This timeout represents the time taken to get the data from the backend\n  };\n\n\n  const handleSubmit = async () => {\n    const payload = {\n      selectedStates: selectedStates.map(state => state.value),\n      selectedCities: selectedCities.map(city => city.value),\n      selectedCounties: selectedCounties.map(county => county.value),\n      startDate: startDate,\n      endDate: endDate,\n      toggleState: toggleState\n    };\n\n    console.log('Payload:', payload);\n    return payload;\n\n    // Send payload to the backend\n    // const response = await fetch('YOUR_BACKEND_ENDPOINT', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   },\n    //   body: JSON.stringify(payload)\n    // });\n\n    // if (!response.ok) {\n    //   throw new Error(`HTTP error! status: ${response.status}`);\n    // }\n\n    // return response.json();\n  };\n\n  console.log('Current latitude:', clickedLat);\n  console.log('Current longitude:', clickedLng);\n\n\n  return (\n\n    \n    <div className=\"App\">\n\n    {clickedLat !== null && clickedLng !== null && (\n      <div>\n        <p>Latitude: {clickedLat}</p>\n        <p>Longitude: {clickedLng}</p>\n      </div>\n    )}\n      {/* <Map ref={mapRef} center={defaultCenter} zoom={defaultZoom} className=\"map\">\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; OpenStreetMap contributors\"\n        />\n      </Map> */}\n      {/* <div className=\"App\"> */}\n\n      \n      {/* {clickedLat && clickedLng && (\n        <div>\n          <p>Latitude: {clickedLat}</p>\n          <p>Longitude: {clickedLng}</p>\n        </div>\n      )} */}\n      {/* </div> */}\n\n      <div className=\"content\">\n\n        \n        {/* Map Section - Leaflet Map or Folium Map */}\n        {!displayFoliumMap ? (\n                <MapContainer center={defaultCenter} zoom={defaultZoom} className=\"map\" onClick={handleMapClick}>\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" attribution=\"&copy; OpenStreetMap contributors\" />\n                {markerPosition && (\n                  <Marker\n                  position={[50.5, 30.5]}\n                  eventHandlers={{\n                    click: (e) => {\n                      console.log('marker clicked', e)\n                    },\n                  }}\n                />\n                )}\n              </MapContainer>\n        ) : (\n          <iframe\n            src={`${process.env.PUBLIC_URL}/map.html`}\n            title=\"Folium Map\"\n            className=\"map\"\n            //style={{ width: '100%', height: '500px' }}\n            frameBorder=\"0\"\n          ></iframe>\n        )}\n\n        <div className=\"sidebar\">\n          <h2>Filter Panel</h2>\n          {/* Existing filters... */}\n          {/* New filters added below */}\n          <div className=\"filter-option\">\n            <label>Choose Dataset :</label>\n            <div className=\"three-way-toggle\">\n              <input\n                type=\"radio\"\n                id=\"toggleOption1\"\n                name=\"toggle\"\n                value=\"option1\"\n                checked={toggleState === 'option1'}\n                onChange={handleToggleChange}\n              />\n              <label htmlFor=\"toggleOption1\">Constructions</label>\n\n              <input\n                type=\"radio\"\n                id=\"toggleOption2\"\n                name=\"toggle\"\n                value=\"option2\"\n                checked={toggleState === 'option2'}\n                onChange={handleToggleChange}\n              />\n              <label htmlFor=\"toggleOption2\">Accidents</label>\n\n              <input\n                type=\"radio\"\n                id=\"toggleOption3\"\n                name=\"toggle\"\n                value=\"option3\"\n                checked={toggleState === 'option3'}\n                onChange={handleToggleChange}\n              />\n              <label htmlFor=\"toggleOption3\">Co-relation</label>\n            </div>\n          </div>\n\n\n          <div className=\"filter-option\">\n            <label htmlFor=\"state-select\">Select State:</label>\n            <Select\n              id=\"state-select\"\n              value={selectedStates}\n              onChange={handleStateChange}\n              options={usStates}\n              isMulti={true}\n              isClearable={true}\n              isSearchable={true}\n              closeMenuOnSelect={false}\n              classNamePrefix=\"select\"\n              placeholder=\"Search and select states...\"\n            />\n          </div>\n\n          <div className=\"filter-option\">\n            <label htmlFor=\"city-select\">Enter City(s):</label>\n            <Creatable\n              id=\"city-select\"\n              value={selectedCities}\n              onChange={handleCityChange}\n              isMulti={true}\n              isClearable={true}\n              placeholder=\"Type and press enter...\"\n              classNamePrefix=\"select\"\n            // menuIsOpen={false}\n            />\n          </div>\n\n          <div className=\"filter-option\">\n            <label htmlFor=\"county-select\">Enter County(s):</label>\n            <Creatable\n              id=\"county-select\"\n              value={selectedCounties}\n              onChange={handleCountyChange}\n              isMulti={true}\n              isClearable={true}\n              placeholder=\"Type and press enter...\"\n              classNamePrefix=\"select\"\n            // menuIsOpen={false}\n            />\n          </div>\n\n\n          <div className=\"date-picker\">\n            <label htmlFor=\"startDate\">Start Date:</label>\n            <input\n              type=\"date\"\n              id=\"startDate\"\n              name=\"startDate\"\n              value={startDate}\n              onChange={handleStartDateChange} // Update state when date is picked\n            />\n          </div>\n          <div className=\"date-picker\">\n            <label htmlFor=\"endDate\">End Date:</label>\n            <input\n              type=\"date\"\n              id=\"endDate\"\n              name=\"endDate\"\n              value={endDate}\n              onChange={handleEndDateChange}\n              min={startDate}\n              disabled={!startDate}\n            />\n          </div>\n\n          {/* <div className=\"date-picker\">\n          <label htmlFor=\"constructionType\">Date Range Selection</label>\n          <label htmlFor=\"constructionType\"> </label>\n          <label htmlFor=\"startDate\"> Start Date:</label>\n          <input\n            type=\"date\"\n            id=\"startDate\"\n            name=\"startDate\"\n            value={dateRange.startDate}\n          />\n        </div>\n        <div className=\"date-picker\">\n          <label htmlFor=\"endDate\">End Date:</label>\n          <input\n            type=\"date\"\n            id=\"endDate\"\n            name=\"endDate\"\n            value={dateRange.endDate}\n          />\n        </div> */}\n\n          {/* <button className=\"generate-report-btn\">Generate Report</button> */}\n          {/* <button className=\"generate-report-btn\" onClick={handleGenerateReport}>\n        {loading ? <div className=\"loading-spinner\"></div> : \"Generate Report\"}\n      </button> */}\n\n          <button className=\"reset-btn\" onClick={handleReset}>\n            Reset\n          </button>\n          <button className=\"generate-report-btn\" onClick={handleGenerateReport}>\n            {loading ? \"Loading...\" : \"Generate Report\"} {/* Loading indicator */}\n          </button>\n\n          <button onClick={() => setShowModal(true)}>Add New Data Point</button>\n\n        </div>\n      </div>\n\n      <Modal isOpen={showModal} onClose={() => setShowModal(false)} onSubmit={handleModalSubmit} />\n\n      <div style={{ borderTop: '2px solid #0e0f0e', margin: '20px 0' }}></div>\n\n\n      {\n        showAnalysis && (\n          <div className=\"analysis-section\">\n            <h1>Analysis</h1>\n            {/* Wrapping each pair of images in a .image-row div */}\n            {imageUrls.map((url, index) => (\n              // Only create a new row for even indices\n              index % 2 === 0 ? (\n                <div className=\"image-row\" key={index}>\n                  {/* First image of the pair */}\n                  <img src={process.env.PUBLIC_URL + '/' + imageUrls[index]} alt={`Analysis ${index + 1}`} />\n                  {/* Second image of the pair, if it exists */}\n                  {imageUrls[index + 1] ? (\n                    <img src={process.env.PUBLIC_URL + '/' + imageUrls[index + 1]} alt={`Analysis ${index + 2}`} />\n                  ) : null}\n                </div>\n              ) : null\n            ))}\n          </div>\n        )\n      }\n\n\n\n    </div>\n\n\n  );\n  \n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}